/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import entities.Cola;
import entities.Nodo;
import entities.Proceso;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import javax.swing.BoxLayout;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.SwingUtilities;
import proyecto1.operativos.soriano.luis.torres.alessandra.MainClass;
import static proyecto1.operativos.soriano.luis.torres.alessandra.MainClass.cpu1;
import static proyecto1.operativos.soriano.luis.torres.alessandra.MainClass.cpu2;
import static proyecto1.operativos.soriano.luis.torres.alessandra.MainClass.cpu3;
import static proyecto1.operativos.soriano.luis.torres.alessandra.MainClass.colaListos;
import static proyecto1.operativos.soriano.luis.torres.alessandra.MainClass.colaBloqueados;
import static proyecto1.operativos.soriano.luis.torres.alessandra.MainClass.colaTerminados;
import static proyecto1.operativos.soriano.luis.torres.alessandra.MainClass.mainWindow;


/**
 *
 * @author Aless
 */
public class MainWindow extends javax.swing.JFrame {
   public CPUpane cpuPane1;
    public CPUpane cpuPane2;
    public CPUpane cpuPane3;
    private int cicloDuracion;
   
            
    /**
     * 
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        
        
        cargarConfiguracion(); 
        configurarSpinners();


        

jScrollPane1.setPreferredSize(new java.awt.Dimension(200, 150));

// Crear y añadir los paneles de CPU
 cpuPane1 = new CPUpane(cpu1);
 cpuPane2 = new CPUpane(cpu2);
 cpuPane3 = new CPUpane(cpu3);

cpuContainer1.setLayout(new java.awt.BorderLayout());
cpuContainer1.add(cpuPane1, java.awt.BorderLayout.CENTER);

cpuContainer2.setLayout(new java.awt.BorderLayout());
cpuContainer2.add(cpuPane2, java.awt.BorderLayout.CENTER);

cpuContainer3.setLayout(new java.awt.BorderLayout());
cpuContainer3.add(cpuPane3, java.awt.BorderLayout.CENTER);

cpuContainer1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0)); // Sin margen
cpuContainer2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
cpuContainer3.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));

cpuPane1.setPreferredSize(new java.awt.Dimension(200, 150)); // Ancho y alto específicos
cpuPane2.setPreferredSize(new java.awt.Dimension(200, 150));
cpuPane3.setPreferredSize(new java.awt.Dimension(200, 150));


       
         TipoCB.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            // Obtener el elemento seleccionado en el ComboBox
            String tipoSeleccionado = (String) TipoCB.getSelectedItem();

            // Comprobar si es "CPU bound" o "I/O bound"
            if ("CPU bound".equals(tipoSeleccionado)) {
                // Deshabilitar los spinners de ciclos para excepciones
                CiclosParaGenSpinner.setEnabled(false);
                CiclosParaSatisExcSpinner.setEnabled(false);
            } else if ("I/O bound".equals(tipoSeleccionado)) {
                // Habilitar los spinners de ciclos para excepciones
                CiclosParaGenSpinner.setEnabled(true);
                CiclosParaSatisExcSpinner.setEnabled(true);
            }
        }
    });
    }
    
    public int getCicloDuracion() {
    return cicloDuracion; // Retorna la duración del ciclo
}

public void setCicloDuracion(int duracion) {
    this.cicloDuracion = duracion; // Actualiza la duración
}



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TabContainer = new javax.swing.JTabbedPane();
        jPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        TituloCrearProceso = new javax.swing.JLabel();
        NombreTF = new javax.swing.JTextField();
        NombreLabel = new javax.swing.JLabel();
        CantInstruccionesSpinner = new javax.swing.JSpinner();
        CantInstruccionesLabel = new javax.swing.JLabel();
        TipoLabel = new javax.swing.JLabel();
        TipoCB = new javax.swing.JComboBox<>();
        CrearProcesoButton = new javax.swing.JButton();
        CiclosParaSatisExcSpinner = new javax.swing.JSpinner();
        CiclosParaGenSpinner = new javax.swing.JSpinner();
        CiclosParaSatisExcSpinner1 = new javax.swing.JLabel();
        CiclosParaSatisExcSpinner2 = new javax.swing.JLabel();
        CiclosParaGenSpinner1 = new javax.swing.JLabel();
        CiclosParaGenSpinner2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        PoliticadePlanificacionCB = new javax.swing.JComboBox<>();
        TituloCambiarPoliticadePlanificacion = new javax.swing.JLabel();
        GuardarCambiosPlanificacionButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        cpuContainer1 = new javax.swing.JPanel();
        cpuContainer2 = new javax.swing.JPanel();
        cpuContainer3 = new javax.swing.JPanel();
        NumciclorrelojLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListosContainer = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        BloqueadosContainer = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ConfiguracionTab = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        TituloPpalConfiguracion = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        CambiarnumCPUsLabel = new javax.swing.JLabel();
        CambiarnumCPUsCB = new javax.swing.JComboBox<>();
        GuardarCambiosNumCPU = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        NumeroCPUSACTUALEs = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        CambiarduracionCiclosLabel = new javax.swing.JLabel();
        GuardarCambiosDuracionCiclos = new javax.swing.JButton();
        DuracionCiclosSpinner = new javax.swing.JSpinner();
        SegundostituloLabel = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        NumeroCICLOACTUAL = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        EstadisticasTab = new javax.swing.JPanel();
        GraficosTab = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel.setBackground(new java.awt.Color(192, 204, 255));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TituloCrearProceso.setText("Crear Proceso");
        jPanel1.add(TituloCrearProceso, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 12, -1, -1));

        NombreTF.setToolTipText("Ingresa el nombre");
        NombreTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombreTFActionPerformed(evt);
            }
        });
        jPanel1.add(NombreTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 34, 150, -1));

        NombreLabel.setText("Nombre:");
        jPanel1.add(NombreLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 37, -1, -1));

        CantInstruccionesSpinner.setValue(1);
        jPanel1.add(CantInstruccionesSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 68, 150, -1));

        CantInstruccionesLabel.setText("Cant. Instrucciones:");
        jPanel1.add(CantInstruccionesLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 71, -1, -1));

        TipoLabel.setText("Tipo:");
        jPanel1.add(TipoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 105, -1, -1));

        TipoCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "I/O bound", "CPU bound" }));
        jPanel1.add(TipoCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 102, 150, -1));

        CrearProcesoButton.setText("Crear Proceso");
        CrearProcesoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearProcesoButtonActionPerformed(evt);
            }
        });
        jPanel1.add(CrearProcesoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 204, -1, -1));

        CiclosParaSatisExcSpinner.setValue(1);
        jPanel1.add(CiclosParaSatisExcSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 173, 150, -1));

        CiclosParaGenSpinner.setValue(1);
        jPanel1.add(CiclosParaGenSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 136, 150, -1));

        CiclosParaSatisExcSpinner1.setText("Ciclos para Satisfacer");
        jPanel1.add(CiclosParaSatisExcSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        CiclosParaSatisExcSpinner2.setText("Excepción:");
        jPanel1.add(CiclosParaSatisExcSpinner2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, 20));

        CiclosParaGenSpinner1.setText("Ciclos para Generar");
        jPanel1.add(CiclosParaGenSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        CiclosParaGenSpinner2.setText("Excepción:");
        jPanel1.add(CiclosParaGenSpinner2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, 20));

        PoliticadePlanificacionCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FCFS", "Round Robin", "SPN", "SRT", "Falta 5to" }));
        PoliticadePlanificacionCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PoliticadePlanificacionCBActionPerformed(evt);
            }
        });

        TituloCambiarPoliticadePlanificacion.setText("Cambiar Política de Planificación");

        GuardarCambiosPlanificacionButton.setText("Guardar Cambios");
        GuardarCambiosPlanificacionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarCambiosPlanificacionButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TituloCambiarPoliticadePlanificacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PoliticadePlanificacionCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(GuardarCambiosPlanificacionButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TituloCambiarPoliticadePlanificacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PoliticadePlanificacionCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(GuardarCambiosPlanificacionButton)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(153, 153, 255));
        jPanel7.setLayout(new java.awt.GridLayout(3, 1, 10, 10));

        javax.swing.GroupLayout cpuContainer1Layout = new javax.swing.GroupLayout(cpuContainer1);
        cpuContainer1.setLayout(cpuContainer1Layout);
        cpuContainer1Layout.setHorizontalGroup(
            cpuContainer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 209, Short.MAX_VALUE)
        );
        cpuContainer1Layout.setVerticalGroup(
            cpuContainer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 177, Short.MAX_VALUE)
        );

        jPanel7.add(cpuContainer1);

        javax.swing.GroupLayout cpuContainer2Layout = new javax.swing.GroupLayout(cpuContainer2);
        cpuContainer2.setLayout(cpuContainer2Layout);
        cpuContainer2Layout.setHorizontalGroup(
            cpuContainer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 209, Short.MAX_VALUE)
        );
        cpuContainer2Layout.setVerticalGroup(
            cpuContainer2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 177, Short.MAX_VALUE)
        );

        jPanel7.add(cpuContainer2);

        javax.swing.GroupLayout cpuContainer3Layout = new javax.swing.GroupLayout(cpuContainer3);
        cpuContainer3.setLayout(cpuContainer3Layout);
        cpuContainer3Layout.setHorizontalGroup(
            cpuContainer3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 209, Short.MAX_VALUE)
        );
        cpuContainer3Layout.setVerticalGroup(
            cpuContainer3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 177, Short.MAX_VALUE)
        );

        jPanel7.add(cpuContainer3);

        NumciclorrelojLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        NumciclorrelojLabel.setText("0");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setText("Ciclo de reloj Global");

        jScrollPane1.setToolTipText("");

        ListosContainer.setLayout(new javax.swing.BoxLayout(ListosContainer, javax.swing.BoxLayout.LINE_AXIS));
        jScrollPane1.setViewportView(ListosContainer);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        javax.swing.GroupLayout BloqueadosContainerLayout = new javax.swing.GroupLayout(BloqueadosContainer);
        BloqueadosContainer.setLayout(BloqueadosContainerLayout);
        BloqueadosContainerLayout.setHorizontalGroup(
            BloqueadosContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 657, Short.MAX_VALUE)
        );
        BloqueadosContainerLayout.setVerticalGroup(
            BloqueadosContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 205, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(BloqueadosContainer);

        jLabel2.setText("Cola de Bloqueados:");

        jLabel5.setText("Cola de Listos:");

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(NumciclorrelojLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
            .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelLayout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(952, Short.MAX_VALUE)))
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89)
                        .addComponent(NumciclorrelojLabel)
                        .addContainerGap(798, Short.MAX_VALUE))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelLayout.createSequentialGroup()
                    .addGap(437, 437, 437)
                    .addComponent(jLabel4)
                    .addContainerGap(833, Short.MAX_VALUE)))
        );

        TabContainer.addTab("Simulador", jPanel);

        jPanel3.setBackground(new java.awt.Color(192, 204, 255));

        TituloPpalConfiguracion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        TituloPpalConfiguracion.setText("Configuración");

        CambiarnumCPUsLabel.setText("Cambiar número de CPUs activos");

        CambiarnumCPUsCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2", "3" }));
        CambiarnumCPUsCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CambiarnumCPUsCBActionPerformed(evt);
            }
        });

        GuardarCambiosNumCPU.setText("Guardar Cambios");
        GuardarCambiosNumCPU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarCambiosNumCPUActionPerformed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Actualmente se encuentran");

        NumeroCPUSACTUALEs.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        NumeroCPUSACTUALEs.setText("2");

        jLabel3.setText("CPUs Activos");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(NumeroCPUSACTUALEs)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NumeroCPUSACTUALEs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(GuardarCambiosNumCPU))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CambiarnumCPUsCB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CambiarnumCPUsLabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(CambiarnumCPUsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CambiarnumCPUsCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(GuardarCambiosNumCPU)))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        CambiarduracionCiclosLabel.setText("Cambiar duración de ciclos de ejecución");

        GuardarCambiosDuracionCiclos.setText("Guardar Cambios");
        GuardarCambiosDuracionCiclos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarCambiosDuracionCiclosActionPerformed(evt);
            }
        });

        DuracionCiclosSpinner.setValue(1);

        SegundostituloLabel.setText("Segundos");

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setText("Actualmente el ciclo de ejecución dura");

        NumeroCICLOACTUAL.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        NumeroCICLOACTUAL.setText("2");

        jLabel9.setText("Segundos");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(0, 13, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(NumeroCICLOACTUAL)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NumeroCICLOACTUAL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(DuracionCiclosSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(CambiarduracionCiclosLabel)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(SegundostituloLabel))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(GuardarCambiosDuracionCiclos)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(CambiarduracionCiclosLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DuracionCiclosSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SegundostituloLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GuardarCambiosDuracionCiclos)
                        .addGap(31, 31, 31))))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TituloPpalConfiguracion)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(757, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(TituloPpalConfiguracion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 918, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout ConfiguracionTabLayout = new javax.swing.GroupLayout(ConfiguracionTab);
        ConfiguracionTab.setLayout(ConfiguracionTabLayout);
        ConfiguracionTabLayout.setHorizontalGroup(
            ConfiguracionTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ConfiguracionTabLayout.setVerticalGroup(
            ConfiguracionTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        TabContainer.addTab("Configuración", ConfiguracionTab);

        javax.swing.GroupLayout EstadisticasTabLayout = new javax.swing.GroupLayout(EstadisticasTab);
        EstadisticasTab.setLayout(EstadisticasTabLayout);
        EstadisticasTabLayout.setHorizontalGroup(
            EstadisticasTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
        );
        EstadisticasTabLayout.setVerticalGroup(
            EstadisticasTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1302, Short.MAX_VALUE)
        );

        TabContainer.addTab("Estadísticas", EstadisticasTab);

        javax.swing.GroupLayout GraficosTabLayout = new javax.swing.GroupLayout(GraficosTab);
        GraficosTab.setLayout(GraficosTabLayout);
        GraficosTabLayout.setHorizontalGroup(
            GraficosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
        );
        GraficosTabLayout.setVerticalGroup(
            GraficosTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1302, Short.MAX_VALUE)
        );

        TabContainer.addTab("Gráficos", GraficosTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabContainer)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabContainer)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
    private void guardarConfiguracion(String clave, String valor) {
    try {
        File archivo = new File("src/configuracion.txt");
        String contenidoNuevo = "";
        boolean claveEncontrada = false;

        // Leer línea por línea y actualizar la clave
        try (BufferedReader reader = new BufferedReader(new FileReader(archivo))) {
            String linea;
            while ((linea = reader.readLine()) != null) {
                if (linea.startsWith(clave + "=")) {
                    contenidoNuevo += clave + "=" + valor + "\n"; // Actualiza el valor
                    claveEncontrada = true;
                } else {
                    contenidoNuevo += linea + "\n"; // Mantén las otras líneas
                }
            }
        }

        // Si la clave no fue encontrada, añádela
        if (!claveEncontrada) {
            contenidoNuevo += clave + "=" + valor + "\n";
        }

        // Sobrescribe el archivo
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(archivo))) {
            writer.write(contenidoNuevo);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al guardar configuración: " + e.getMessage());
    }
}

    private void cargarConfiguracion() {
    try (BufferedReader reader = new BufferedReader(new FileReader("src/configuracion.txt"))) {
        String linea;
        while ((linea = reader.readLine()) != null) {
            String[] partes = linea.split("=");
            String clave = partes[0];
            String valor = partes[1];

            switch (clave) {
                case "CPUsActivos":
                    CambiarnumCPUsCB.setSelectedItem(valor);
                    NumeroCPUSACTUALEs.setText(valor);
                    break;
                case "DuracionCiclos":
                    DuracionCiclosSpinner.setValue(Integer.parseInt(valor));
                    NumeroCICLOACTUAL.setText(valor);
                    cicloDuracion = Integer.parseInt(valor); // Actualiza la variable global
                    break;
            }
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al cargar configuración: " + e.getMessage());
    }
}

    
    private void NombreTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombreTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NombreTFActionPerformed

    private void CrearProcesoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearProcesoButtonActionPerformed
      
    try {
        // Obtener datos de los campos
        String nombre = NombreTF.getText();
        int cantidadInstrucciones = (int) CantInstruccionesSpinner.getValue();
        String tipo = (String) TipoCB.getSelectedItem();
        int ciclosParaGenerarExcepcion = (int) CiclosParaGenSpinner.getValue();
        int ciclosParaSatisfacerExcepcion = (int) CiclosParaSatisExcSpinner.getValue();

        // Validar que el nombre no esté vacío
        if (nombre.isEmpty()) {
            throw new IllegalArgumentException("El nombre no puede estar vacío.");
        }

        // Validar condiciones para CPU bound o I/O bound
        if ("CPU bound".equals(tipo)) {
            ciclosParaGenerarExcepcion = 0;
            ciclosParaSatisfacerExcepcion = 0;
        }

        // Crear el objeto Proceso
        Proceso proceso = new Proceso(
                nombre,
                cantidadInstrucciones,
                tipo,
                ciclosParaGenerarExcepcion,
                ciclosParaSatisfacerExcepcion
        );
        
        proceso.setCicloEnqueCola(MainClass.cicloGlobal);

        
        // Imprimir el objeto en la consola
        System.out.println(proceso);
        
        // mandar proceso a la cola de listos
        colaListos.enqueue(proceso);
        colaListos.imprimirCola();

        // Restablecer los valores de los campos
        resetForm();

        // Mostrar un mensaje de éxito
        JOptionPane.showMessageDialog(this, "Proceso creado con éxito:\n" + proceso, 
                                      "Éxito", JOptionPane.INFORMATION_MESSAGE);
    } catch (Exception e) {
        // Mostrar errores en caso de que algo falle
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }    
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_CrearProcesoButtonActionPerformed

    private void GuardarCambiosPlanificacionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarCambiosPlanificacionButtonActionPerformed
        String algoritmoSeleccionado = (String) PoliticadePlanificacionCB.getSelectedItem();
    }//GEN-LAST:event_GuardarCambiosPlanificacionButtonActionPerformed

    private void PoliticadePlanificacionCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PoliticadePlanificacionCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PoliticadePlanificacionCBActionPerformed

    private void CambiarnumCPUsCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CambiarnumCPUsCBActionPerformed
        // TODO add your handling code here: AQUI NADA NO ES BOTON
    }//GEN-LAST:event_CambiarnumCPUsCBActionPerformed

    private void GuardarCambiosNumCPUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarCambiosNumCPUActionPerformed
         String cpusActivos = (String) CambiarnumCPUsCB.getSelectedItem();

    // Actualizar el valor en el label
    NumeroCPUSACTUALEs.setText(cpusActivos);

    // Guardar el nuevo valor en el archivo de configuración
    guardarConfiguracion("CPUsActivos", cpusActivos);

    // Cambiar el estado del CPU 3 según la nueva configuración
    if (cpusActivos.equals("2")) {
        cpu3.setActivo(false); // Desactivar CPU 3
         cpuContainer3.setBackground(new java.awt.Color(255, 102, 102)); // Fondo rojo
        cpuPane3.setBackground(new java.awt.Color(255, 102, 102)); // Fondo rojo del panel
        for (java.awt.Component component : cpuPane3.getComponents()) {
            if (component instanceof javax.swing.JLabel) {
                ((javax.swing.JLabel) component).setForeground(new java.awt.Color(255, 102, 102)); // Texto blanco
            }}
        
    } else if (cpusActivos.equals("3")) {
        cpu3.setActivo(true); // Activar CPU 3
        cpuContainer3.setBackground(new java.awt.Color(242,242,242)); // Fondo normal
        cpuPane3.setBackground(new java.awt.Color(242,242,242)); // Fondo normal del panel
        for (java.awt.Component component : cpuPane3.getComponents()) {
            if (component instanceof javax.swing.JLabel) {
                ((javax.swing.JLabel) component).setForeground(new java.awt.Color(0, 0, 0)); // Texto negro
            }
        }
    }
    
    cpuContainer3.repaint();
    // Mostrar mensaje de confirmación
    JOptionPane.showMessageDialog(this, "Número de CPUs guardado correctamente.");

    // Imprimir el estado de las CPUs para verificar
    System.out.println("CPU 1: " + cpu1);
    System.out.println("CPU 2: " + cpu2);
    System.out.println("CPU 3: " + cpu3);
    
    
    }//GEN-LAST:event_GuardarCambiosNumCPUActionPerformed

    private void GuardarCambiosDuracionCiclosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarCambiosDuracionCiclosActionPerformed
        String duracionCiclos = String.valueOf(DuracionCiclosSpinner.getValue());
        cicloDuracion = Integer.parseInt(duracionCiclos); // Actualiza la variable global
    NumeroCICLOACTUAL.setText(duracionCiclos); // Actualiza el label
    guardarConfiguracion("DuracionCiclos", duracionCiclos); // Guarda en el archivo
    JOptionPane.showMessageDialog(this, "Duración de ciclos guardada correctamente.");
    }//GEN-LAST:event_GuardarCambiosDuracionCiclosActionPerformed

        // valores vuelven a ser 0 despues de crear un proceso
    private void resetForm() {
    NombreTF.setText(""); // Vaciar el campo de texto
    CantInstruccionesSpinner.setValue(0); // Restablecer el spinner a 0
    TipoCB.setSelectedIndex(0); // Seleccionar el primer elemento del ComboBox
    CiclosParaGenSpinner.setValue(0); // Restablecer el spinner a 0
    CiclosParaSatisExcSpinner.setValue(0); // Restablecer el spinner a 0
    CiclosParaGenSpinner.setEnabled(false); // Deshabilitar los spinners de ciclos
    CiclosParaSatisExcSpinner.setEnabled(false);
    
}
    
    public void actualizarCicloGlobal(int ciclo) {
    if (NumciclorrelojLabel != null) {
        NumciclorrelojLabel.setText(String.valueOf(ciclo));
    } else {
        System.out.println("Error: Label no inicializado.");
    }
}
    
    public void setColorCPU3ACTIVO() {
    
        cpuContainer3.setBackground(new java.awt.Color(242,242,242)); // Fondo normal
        cpuPane3.setBackground(new java.awt.Color(242,242,242)); // Fondo normal del panel
        for (java.awt.Component component : cpuPane3.getComponents()) {
            if (component instanceof javax.swing.JLabel) {
                ((javax.swing.JLabel) component).setForeground(new java.awt.Color(0, 0, 0)); // Texto negro
            }
        }        
    }
    
    public void setColorCPU3DESACTIVADO() {
    
         cpuContainer3.setBackground(new java.awt.Color(255, 102, 102)); // Fondo rojo
        cpuPane3.setBackground(new java.awt.Color(255, 102, 102)); // Fondo rojo del panel
        for (java.awt.Component component : cpuPane3.getComponents()) {
            if (component instanceof javax.swing.JLabel) {
                ((javax.swing.JLabel) component).setForeground(new java.awt.Color(255, 102, 102)); // Texto blanco
            }} 
    }
    
 private void configurarSpinners() {
    configurarSpinnersSoloFlechas(); // Desactiva la entrada manual
    agregarListenersDeValidacion(); // Añade validación para valores mayores a 0
}

private void configurarSpinnersSoloFlechas() {
    desactivarInputManual(CantInstruccionesSpinner);
    desactivarInputManual(CiclosParaGenSpinner);
    desactivarInputManual(CiclosParaSatisExcSpinner);
    desactivarInputManual(DuracionCiclosSpinner);
}

private void desactivarInputManual(javax.swing.JSpinner spinner) {
    // Obtener el editor del JSpinner y desactivar la edición del campo de texto
    javax.swing.JSpinner.DefaultEditor editor = (javax.swing.JSpinner.DefaultEditor) spinner.getEditor();
    editor.getTextField().setEditable(false);
}

private void agregarListenersDeValidacion() {
    agregarValidacionASpinner(CantInstruccionesSpinner);
    agregarValidacionASpinner(CiclosParaGenSpinner);
    agregarValidacionASpinner(CiclosParaSatisExcSpinner);
    agregarValidacionASpinner(DuracionCiclosSpinner);
}

private void agregarValidacionASpinner(javax.swing.JSpinner spinner) {
    spinner.addChangeListener(e -> {
        int valor = (int) spinner.getValue();
        if (valor < 0) {
            // Restablece el valor a 1 si es 0 o negativo
            spinner.setValue(1);
            JOptionPane.showMessageDialog(null, 
                "El valor debe ser mayor a 0.", 
                "Valor no válido", 
                JOptionPane.ERROR_MESSAGE);
        }
        else{}
    });
}

public void actualizarListaPane(Cola<Proceso> colaProcesos) {
    SwingUtilities.invokeLater(() -> {
        // Limpiar el contenedor antes de agregar nuevos paneles
        ListosContainer.removeAll();

        // Recorrer la cola y crear un ListaPane para cada proceso
        Nodo<Proceso> nodoActual = colaProcesos.peekNode(); // Accede al nodo inicial
        while (nodoActual != null) {
            Proceso proceso = nodoActual.getDato();
            ListaPane panelProceso = new ListaPane(proceso);
            ListosContainer.add(panelProceso); // Agregar el panel al contenedor
            nodoActual = nodoActual.getSiguiente(); // Avanzar al siguiente nodo
        }

        // Refrescar el contenedor para que los cambios sean visibles
        ListosContainer.revalidate();
        ListosContainer.repaint();
    });
}

public void actualizarListaPane2(Cola<Proceso> colaProcesos) {
    SwingUtilities.invokeLater(() -> {
        // Limpiar el contenedor antes de agregar nuevos paneles
        ListosContainer.removeAll();

        // Recorrer la cola y crear un ListaPane para cada proceso
        Nodo<Proceso> nodoActual = colaProcesos.peekNode(); // Accede al nodo inicial
        while (nodoActual != null) {
            Proceso proceso = nodoActual.getDato();
            ListaPane panelProceso = new ListaPane(proceso);
            BloqueadosContainer.add(panelProceso); // Agregar el panel al contenedor
            nodoActual = nodoActual.getSiguiente(); // Avanzar al siguiente nodo
        }

        // Refrescar el contenedor para que los cambios sean visibles
        ListosContainer.revalidate();
        ListosContainer.repaint();
    });
}
// COLA LISTOS
public void iniciarActualizacionAutomatica(Cola<Proceso> colaProcesos) {
    Thread hiloActualizacion = new Thread(() -> {
        while (true) {
            try {
                Thread.sleep(500); // Actualizar cada 500 ms (ajustable)
                mainWindow.actualizarListaPane(colaProcesos); // Actualiza la interfaz
            } catch (InterruptedException e) {
                e.printStackTrace();
                Thread.currentThread().interrupt(); // Manejar la interrupción
                break;
            }
        }
    });
    hiloActualizacion.setDaemon(true); // Terminará automáticamente cuando la aplicación cierre
    hiloActualizacion.start();
}
//COLA BLOQUEADOS



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BloqueadosContainer;
    private javax.swing.JLabel CambiarduracionCiclosLabel;
    private javax.swing.JComboBox<String> CambiarnumCPUsCB;
    private javax.swing.JLabel CambiarnumCPUsLabel;
    private javax.swing.JLabel CantInstruccionesLabel;
    private javax.swing.JSpinner CantInstruccionesSpinner;
    private javax.swing.JSpinner CiclosParaGenSpinner;
    private javax.swing.JLabel CiclosParaGenSpinner1;
    private javax.swing.JLabel CiclosParaGenSpinner2;
    private javax.swing.JSpinner CiclosParaSatisExcSpinner;
    private javax.swing.JLabel CiclosParaSatisExcSpinner1;
    private javax.swing.JLabel CiclosParaSatisExcSpinner2;
    private javax.swing.JPanel ConfiguracionTab;
    private javax.swing.JButton CrearProcesoButton;
    private javax.swing.JSpinner DuracionCiclosSpinner;
    private javax.swing.JPanel EstadisticasTab;
    private javax.swing.JPanel GraficosTab;
    private javax.swing.JButton GuardarCambiosDuracionCiclos;
    private javax.swing.JButton GuardarCambiosNumCPU;
    private javax.swing.JButton GuardarCambiosPlanificacionButton;
    private javax.swing.JPanel ListosContainer;
    private javax.swing.JLabel NombreLabel;
    private javax.swing.JTextField NombreTF;
    private javax.swing.JLabel NumciclorrelojLabel;
    private javax.swing.JLabel NumeroCICLOACTUAL;
    private javax.swing.JLabel NumeroCPUSACTUALEs;
    private javax.swing.JComboBox<String> PoliticadePlanificacionCB;
    private javax.swing.JLabel SegundostituloLabel;
    private javax.swing.JTabbedPane TabContainer;
    private javax.swing.JComboBox<String> TipoCB;
    private javax.swing.JLabel TipoLabel;
    private javax.swing.JLabel TituloCambiarPoliticadePlanificacion;
    private javax.swing.JLabel TituloCrearProceso;
    private javax.swing.JLabel TituloPpalConfiguracion;
    private javax.swing.JPanel cpuContainer1;
    private javax.swing.JPanel cpuContainer2;
    private javax.swing.JPanel cpuContainer3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
